<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rabbiter.oes.system.mapper.SysRoleMapper">

    <resultMap id="BaseResultMap" type="com.rabbiter.oes.system.entity.SysRole">
        <!--@Table sys_role-->
        <result property="roleId" column="role_id" jdbcType="BIGINT"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="hasDelete" column="is_delete" jdbcType="TINYINT" javaType="Boolean"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="DATE"/>
        <result property="modifiedBy" column="modified_by" jdbcType="VARCHAR"/>
        <result property="modifiedTime" column="modified_time" jdbcType="DATE"/>
    </resultMap>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
        role_id, role_name, description, is_delete, create_by, create_time, modified_by, modified_time
        from sys_role
        <where>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="modifiedBy != null and modifiedBy != ''">
                and modified_by = #{modifiedBy}
            </if>
            <if test="modifiedTime != null">
                and modified_time = #{modifiedTime}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_role
        <where>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="modifiedBy != null and modifiedBy != ''">
                and modified_by = #{modifiedBy}
            </if>
            <if test="modifiedTime != null">
                and modified_time = #{modifiedTime}
            </if>
        </where>
    </select>

    <insert id="insertBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into sys_role(role_name, description, is_delete, create_by, create_time, modified_by, modified_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.description}, #{entity.isDelete}, #{entity.createBy}, #{entity.createTime}, #{entity.modifiedBy}, #{entity.modifiedTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into sys_role(role_name, description, is_delete, create_by, create_time, modified_by, modified_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.description}, #{entity.isDelete}, #{entity.createBy}, #{entity.createTime}, #{entity.modifiedBy}, #{entity.modifiedTime})
        </foreach>
        on duplicate key update
        role_name = values(role_name),
        description = values(description),
        is_delete = values(is_delete),
        create_by = values(create_by),
        create_time = values(create_time),
        modified_by = values(modified_by),
        modified_time = values(modified_time)
    </insert>
</mapper>

